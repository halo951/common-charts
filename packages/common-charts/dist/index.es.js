/** common-charts
 *
 * @author halo951(https://github.com/halo951)
 * @license MIT
 */
import{defineComponent as e,ref as t,watch as r,onMounted as n,onBeforeUnmount as o,h as i}from"vue";import{init as s}from"echarts";const l={firstRenderSleep:0,clear:!1,renderer:(()=>{const e=navigator.userAgent.toLowerCase();return/mobile/.test(e)?"svg":"canvas"})()};const a=new class{pool=[];push(e){this.pool.push(e),this.execute()}lock=!1;execute(){if(!this.lock){for(;this.pool.length>0;)try{const e=this.pool.pop();requestAnimationFrame(e)}catch(e){console.error(e)}this.lock=!1}}},c=e({name:"Chart",props:{options:{type:Object,default:()=>({})},firstRenderSleep:{type:Number,default:()=>l.firstRenderSleep},clear:{type:Boolean,default:()=>l.clear},renderer:{type:String,default:()=>l.renderer}},setup(e,{}){const i=t(null),l=t(0),c=t(),u=async()=>{var t;i.value&&(l.value>Date.now()&&await(t=l.value-Date.now(),new Promise((e=>setTimeout((()=>e()),t)))),a.push((()=>i.value?.setOption(e.options??{}))))},p=e=>{e.position||(e.confine=!0,e.position=function(e,t,r){if(r instanceof HTMLElement){if(r.getBoundingClientRect().left<0)return"right";if(r.getBoundingClientRect().right>window.innerWidth-r.clientWidth)return"left"}return"inside"})},d=()=>{i.value?.resize()};return r(t(e.options),(()=>(()=>{if(!i.value)return;e.clear&&i.value.clear();const{tooltip:t}=e.options;if(t)if(t instanceof Array)for(const e of t)p(e);else p(t);u()})())),n((()=>{l.value=e.firstRenderSleep+Date.now(),i.value=s(c.value,"default",{renderer:e.renderer}),e.options&&u(),window.addEventListener("resize",d)})),o((()=>{i.value&&!i.value.isDisposed()&&(i.value.dispose(),window.removeEventListener("resize",d))})),{el:c}},render:()=>i("div",{ref:"el",class:"chart"})}),u=e=>{l.firstRenderSleep=e},p=e=>{l.clear=e},d=e=>{l.renderer=e},f=(e,t)=>{console.log("create bar")},v=(e,t)=>{console.log("create simple bar"),f()},h=(e,t)=>{},m=(e,t)=>{};export{c as Chart,f as createBar,h as createPie,v as createSimpleBar,m as createSimplePie,p as setClear,u as setFirstRenderSleep,d as setRenderer};
